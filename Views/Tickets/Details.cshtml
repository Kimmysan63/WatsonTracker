@model WatsonTracker.Models.Ticket

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div>
    <h4>Ticket</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            Assigned To Name
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AssignedToUser.FirstName)
        </dd>

        <dt>
            Submitter's Name
        </dt>

        <dd>
            @Html.DisplayFor(model => model.OwnerUser.FirstName)
        </dd>

        <dt>
            Project Name
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Project.Name)
        </dd>

        <dt>
            Ticket Priority
        </dt>

        <dd>
            @Html.DisplayFor(model => model.TicketPriority.Name)
        </dd>

        <dt>
            Ticket Status
        </dt>

        <dd>
            @Html.DisplayFor(model => model.TicketStatus.Name)
        </dd>

        <dt>
            Ticket Type

        <dd>
            @Html.DisplayFor(model => model.TicketType.Name)
        </dd>

        <dt>
            Ticket Title
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Title)
        </dd>

        <dt>
            Ticket Description
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>

        <dt>
            Created Date
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Created)
        </dd>

        <dt>
            Updated
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Updated)
        </dd>

    </dl>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
    @Html.ActionLink("Back to List", "Index")
</p>

@*Add Comments Section*@
<div class="comment-main">
    <h3 class="blog-title">Comments (@Model.Comments.Count)<span></span></h3>
    <div class="row">
        @foreach (var item in Model.Comments)
        {

            <ol class="comments">
                <li class="comment even thread-even depth-1" id="comment-1">
                    <div id="div-comment-1" class="comment-wrap">
                        @*<div class="comment-theme">
                                <div class="comment-image">
                                    <img src="~/Template/assets/images/comment/OIP.jfif" alt="Jhon">
                                </div>
                            </div>*@
                        <div class="comment-main-area">
                            <div class="comment-wrapper">
                                <div class="sewl-comments-meta">
                                    <h4><a href="#">@item.User.FirstName</a></h4>
                                </div>
                                <div class="comment-area">
                                    <p>@Html.Raw(item.Comment)</p>
                                    @Html.ActionLink("Edit", "Edit", "Comments", new { id = item.Id }, new { @class = "btn btn-warning" }) <span>|</span>
                                    @Html.ActionLink("Delete", "Delete", "Comments", new { id = item.Id }, new { @class = "btn btn-warning" })
                                </div>
                            </div>
                        </div>

                    </div>
                </li>
            </ol>
        }
    </div>


    @if (User.Identity.IsAuthenticated)
    {
        using (Html.BeginForm("Create", "TicketComments", new { ticketId = Model.Id }, FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            <div class="form-horizontal">
                <div class="container">
                    <h4>Comment</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        <div class="col-md-10">
                            <textarea name="Comment" id="Comment" placeholder="Type your comment" class="form-control"></textarea>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Add Comment" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            </div>
        }
    }

</div>

@*Attachments Section*@



<div class="comment-main">
    <h3 class="blog-title">Attachments (@Model.Attachments.Count)<span></span></h3>
    <div class="row">
        @foreach (var attachment in Model.Attachments)
        {
            <div class="row">
                <div class="col-md-7">
                    <a href="@attachment.FilePath">@attachment.FilePath.Remove(0, 13)</a>
                </div>
                <div class="col-md-5">
                    <img src="attachment.FilePath)" style="width:40px;" />
                </div>
            </div>

        }
    </div>

    @if (User.Identity.IsAuthenticated)
    {
        using (Html.BeginForm("Create", "TicketAttachments", new { ticketId = Model.Id }, FormMethod.Post, new { enctype = "Multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            <div class="row">
                <div class="form-group col-md-12">
                    <input name="attachment" type="file" class="form-control" id="fileUpload" />
                </div>
                <div class="form-group col-md-12">
                    <button type="submit" class="btn btn-primary">Submit Attachment</button>
                </div>
            </div>

        }
    }
</div>

@*Ticket histories*@
<div class="comment-main">
    <h3 class="blog-title">Histories (@Model.Histories.Count)<span></span></h3>
    <div class="row">

        @foreach (var history in Model.Histories)
        {

        }
    </div>
</div>
<table class="table">
    <thead>
        <tr>
            <th>
                Property
            </th>
            <th>
                Old Value
            </th>
            <th>
                New Value
            </th>
            <th>
                Created
            </th>
        </tr>
    </thead>
    <tbody>

        @foreach (var item in Model.Histories)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Property)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OldValue)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NewValue)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Changed)
                </td>
            </tr>
        }

    </tbody>
</table>






